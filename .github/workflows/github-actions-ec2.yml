# name: Push-to-EC2

# # Trigger deployment only on push to main branch
# on:
#   push:
#     branches:
#       - main

# jobs:
#   deploy:
#     name: Deploy to EC2 on master branch push
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout the files
#         uses: actions/checkout@v2

#       - name: Deploy to Server 1
#         uses: easingthemes/ssh-deploy@main
#         env:
#           SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
#           REMOTE_HOST: ${{ secrets.HOST_DNS }}
#           REMOTE_USER: ${{ secrets.USERNAME }}
#           TARGET: ${{ secrets.TARGET_DIR }}

#       - name: Executing remote ssh commands using ssh key
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.HOST_DNS }}
#           username: ${{ secrets.USERNAME }}
#           key: ${{ secrets.EC2_SSH_KEY }}
#           script: |
#             sudo apt-get -y update
#             sudo apt-get install -y apache2
#             sudo systemctl start apache2
#             sudo systemctl enable apache2
#             cd home
#             sudo mv * /var/www/html
name: Push-to-EC2

# Trigger deployment only on push to main branch
on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to EC2 on main branch push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the files
        uses: actions/checkout@v2

      - name: Deploy to Server
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          REMOTE_HOST: ${{ secrets.HOST_DNS }}
          REMOTE_USER: ${{ secrets.USERNAME }}
          TARGET: ${{ secrets.TARGET_DIR }}

      - name: Executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Install Nginx
            sudo apt-get -y update
            sudo apt-get install -y nginx

            # Start and enable Nginx
            sudo systemctl start nginx
            sudo systemctl enable nginx

            # Copy files to Nginx root directory
            sudo rsync -r --delete-after --quiet $GITHUB_WORKSPACE/* /var/www/html/
